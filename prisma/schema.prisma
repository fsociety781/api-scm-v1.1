// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}
datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}
model User {
  id        Int @id @default(autoincrement())
  name      String @db.VarChar(100)
  address   String @db.VarChar(100)
  username  String @unique @db.VarChar(20)
  email     String @unique @db.VarChar(50)
  password  String @db.VarChar(100)
  role      user_role @default(user)
  is_active Boolean @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Barn barn[]

}
model device {
  id     Int @id @default(autoincrement())
  guid   String @unique @db.VarChar(50)
  versionId Int
  barnId Int
  status device_status @default(offline)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  sensor sensor[]
  setDevice setDevice[]
  setSchedule setSchedule[]
  mode mode[]
  scheduleMode scheduleMode[]
  history history[]
  controll controll[]

  barn barn @relation(fields: [barnId], references: [id], map: "Device_barn_id_fkey")
  version version @relation(fields: [versionId], references: [id], map: "Device_version_id_fkey")

  @@index([barnId], map: "device_barnId_fkey")
  @@index([versionId], map: "device_versionId_fkey")
}
model sensor {
  id          Int @id @default(autoincrement())
  deviceId    Int 
  temperature Float
  humidity    Float
  time       String @db.VarChar(50)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  device device @relation(fields: [deviceId], references: [id], map: "sensor_deviceId_fkey")

  @@index([deviceId], map: "sensor_deviceId_fkey")
}
model setDevice {
  id       Int @id @default(autoincrement())
  deviceId Int 
  MinS     Int
  MidS     Int
  MinK     Int
  MidK     Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  device device @relation(fields: [deviceId], references: [id], map: "setDevice_deviceId_fkey")

  @@index([deviceId], map: "setDevice_deviceId_fkey")
}
model setSchedule {
  id       Int @id @default(autoincrement())
  deviceId Int
  hour     Int
  minute   Int
  min_timer Int
  second_timer Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  device device @relation(fields: [deviceId], references: [id], map: "setSchedule_deviceId_fkey")

  @@index([deviceId], map: "setSchedule_deviceId_fkey")
}
model mode {
  id       Int @id @default(autoincrement())
  deviceId Int
  mode     mode_type @default(manual)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  device device @relation(fields: [deviceId], references: [id], map: "mode_deviceId_fkey")

  @@index([deviceId], map: "mode_deviceId_fkey")
}
model scheduleMode {
  id       Int @id @default(autoincrement())
  deviceId Int
  schedule schedule @default(off)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  device device @relation(fields: [deviceId], references: [id], map: "scheduleMode_deviceId_fkey")

  @@index([deviceId], map: "scheduleMode_deviceId_fkey")
}
model history {
  id       Int @id @default(autoincrement())
  deviceId Int
  mode     String @db.VarChar(50)
  fan      String @db.VarChar(50)
  pump     String @db.VarChar(50)
  time     DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  device device @relation(fields: [deviceId], references: [id], map: "history_deviceId_fkey")

  @@index([deviceId], map: "history_deviceId_fkey")

}
model controll {
  id       Int @id @default(autoincrement())
  deviceId Int
  fan      Int
  pump     Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  device device @relation(fields: [deviceId], references: [id], map: "controll_deviceId_fkey")

  @@index([deviceId], map: "controll_deviceId_fkey")
}
model barn {
  id        Int @id @default(autoincrement())
  UserId    Int
  name      String @db.VarChar(100)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  device device[]
  informatian informatian[]
  User User @relation(fields: [UserId], references: [id], map: "barn_UserId_fkey")
}
model version {
  id        Int @id @default(autoincrement())
  version   String @db.VarChar(50)
  firmware  Bytes
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  device device[]

}
model informatian {
  id            Int @id @default(autoincrement())
  barnId        Int
  cycle         String @db.VarChar(50)
  harvest_date  DateTime
  harvest_yield String @db.VarChar(50)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  barn barn @relation(fields: [barnId], references: [id], map: "informatian_barnId_fkey")

  @@index([barnId], map: "informatian_barnId_fkey")
}
model acces {
  id Int @id @default(autoincrement())
  userId Int
  name String @db.VarChar(20)
  token String  @db.Text()
}

enum user_role {
  admin
  user 
}

enum device_status {
  online
  offline
}

enum mode_type {
  manual
  auto
  haybrid
}

enum schedule { 
  off
  modeSchedule1
  modeSchedule2
}